* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* Good universal reset — consistent rendering across browsers. */

html,
body {
  height: 100%;
}
body {
  font-family: Arial, sans-serif;
  background: #fafafa;
  color: #111;
}
/* Simple, readable typography and color scheme. */
/* Suggestion: add `line-height: 1.5;` to improve paragraph readability. */
/* Consider a system font stack for faster rendering. */

.split {
  display: flex;
  min-height: 100vh;
}
/* Clean two-panel split layout. */
/* Suggestion: consider using `height: 100dvh` for better mobile viewport behavior on iOS/Android. */

.panel {
  flex: 1 1 50%;
}
/* Efficient use of flex shorthand for equal panel sizing. */

.left {
  position: relative;
  overflow: hidden;
  background: #eaeaea;
}
.left img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}
/* Excellent responsive image handling with object-fit. */
/* Suggestion: Add a subtle overlay or gradient if the image needs contrast with text on top later. */

.right {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 48px clamp(24px, 4vw, 56px);
  background: #fff;
}
/* Strong use of clamp() for adaptive padding; ensures it scales smoothly on different screens. */

.content {
  max-width: 520px;
}
/* Keeps text readable — good measure limit. */

h1 {
  font-size: clamp(36px, 6vw, 56px);
  line-height: 1.05;
  letter-spacing: -0.02em;
  margin-bottom: 12px;
}
/* Excellent fluid typography. */
/* Suggestion: add responsive top margin or adjust for mobile spacing at small breakpoints. */

.tagline {
  font-size: clamp(16px, 2.2vw, 20px);
  color: #444;
  margin-bottom: 28px;
}
/* Subtle contrast text — works well under a large header. */

.btn {
  appearance: none;
  border: none;
  cursor: pointer;
  font-weight: 600;
  border-radius: 8px;
  padding: 14px 18px;
  transition:
    transform 0.05s ease,
    opacity 0.2s ease;
}
.btn:active {
  transform: translateY(1px);
}
/* Nice tactile feedback animation; quick but not intrusive. */
/* Suggestion: add :focus-visible style for keyboard accessibility. */

.btn-primary {
  width: 100%;
  max-width: 320px;
  background: #000;
  color: #fff;
}
.btn-primary:hover {
  opacity: 0.9;
}
/* Clean minimalist button styling. */
/* Could add a `transition: background-color` for smoother hover. */
/* Consider using CSS variables (e.g., `--primary-color`) for easier theming. */

.foot {
  text-align: right;
}
.foot a {
  color: inherit;
  text-decoration: underline;
  text-underline-offset: 2px;
}
/* Underline offset is a nice modern detail for readability. */
/* Suggestion: add hover/focus state (e.g., underline-color change) for interactivity. */

@media (max-width: 840px) {
  .split {
    flex-direction: column;
  }
  .left {
    height: 40vh;
  }
  .right {
    min-height: 60vh;
  }
  .foot {
    text-align: left;
    margin-top: 24px;
  }
}
/* Excellent responsive design — simple but effective breakpoint. */
/* Suggestion: consider adding `padding` adjustments or smaller `h1` sizes for screens <480px. */
